{"version":3,"sources":["images/me-small.jpg","images/blockss.png","images/rolling-times.png","images/teapot.png","images/scottkim.png","pages/Home.js","pages/Blog.js","pages/Gallery.js","components/Project.js","pages/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","class","id","src","me","title","alt","Blog","Gallery","useContentful","contentType","query","data","error","fetched","loading","console","debug","items","fields","image","file","url","Project","props","style","border","flex","display","placeItems","subtitle","detail","href","linkAddress","Projects","justifycontent","rrtimes","blockss","teapot","scottkim","contentfulClient","ContentfulClient","accessToken","space","App","client","type","name","for","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7d47afc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me-small.76f14bfa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blockss.1835e769.png\";","module.exports = __webpack_public_path__ + \"static/media/rolling-times.49b63e03.png\";","module.exports = __webpack_public_path__ + \"static/media/teapot.8fb80824.png\";","module.exports = __webpack_public_path__ + \"static/media/scottkim.88371269.png\";","import React from 'react';\nimport me from '../images/me-small.jpg'\n\nexport default function Home() {\n  return (\n<div class='row margin-top-large'>\n  <div class='paper container border-dashed border-thick'>\n    <div class='row flex-spaces' id='introduction'>\n      <span class='md-8 col'>\n        <div id='title-name'>\n            <h1>\n              Hello!\n            </h1>\n        </div>\n        <div id='self-intro'>\n            <p>Oh boy, looks like you've found my website</p>\n            <p>I'm just a regular guy that likes cool things and such</p>\n            <p>Feel free to take a look around, and I hope you enjoy your stay friend</p>\n        </div>\n    </span>\n    <span class='col-4 col'>\n        <img src={me} title='A picture of me!' alt='Myself climbing onto sign post' id='img-of-me'></img>\n    </span>\n    </div>\n  </div>\n</div>\n)\n}","import React from 'react';\n\nexport default function Blog() {\n  return (\n<div class='row margin-top-large'>\n  <div class='paper container border-dashed border-thick'>\n    <div class='text-center'>\n      <h1 class='margin-none'> Blog </h1>\n    </div>\n    <div class='col flex-spaces'>\n      <h2> HA! You <b><i>thought!</i></b></h2>\n      <p>I don't actually have a blog, i'm not that cool yet :(</p>\n      <p>I'm sorry about the whole deception thing, but just that the navbar just looked so <i>empty</i>&nbsp; without it</p>\n      <p>The other links are real though! I promise!</p>\n    </div>\n  </div>\n</div>\n)\n}","import React from 'react';\nimport { useContentful } from 'react-contentful';\n\n\nexport default function Gallery() {\n  const { data, error, fetched, loading } = useContentful({\n    contentType: 'Page',\n    query: {\n      'content_type': 'photo'\n    }\n  });\n\n  if (loading || !fetched) {\n    return null;\n  }\n \n  if (error) {\n    console.error(error);\n    return null;\n  }\n \n  if (!data) {\n    return <p>Page does not exist.</p>;\n  }\n  \n  // See the Contentful query response\n  console.debug(data);\n\n  return (\n<div class='col'>\n  <div class='paper container border-dashed border-thick'>\n    <h1 class='margin-none'>Some photos I took</h1>\n    <img src={`${data.items[0].fields.image.fields.file.url}?fm=jpg&fl=progressive`}></img>\n  </div>\n</div>\n)\n}","import React from 'react';\n\nexport default function Project(props) {\n  return (\n<div class='card margin shadow shadow-small' style={{border: '2px solid #576d74'}}>\n  <div class='row margin-small'>\n    <div class='col' style={{flex: '1 0 230px', display: 'grid', placeItems: 'center'}}>\n      <img class='' src={props.image}></img>\n    </div>\n    <div class='card-body col' style={{flex: '10 0 330px'}}>\n      <h4 class='card-title'>{props.title}</h4>\n      <h5 class='card-subtitle'>{props.subtitle}</h5>\n      <p class='card-text'>{props.detail}</p>\n      <a class='card-link' href={props.linkAddress}>Check it out!</a>\n    </div>\n  </div>\n</div>\n  )\n}","import React from 'react';\nimport Project from '../components/Project.js';\nimport blockss from '../images/blockss.png'\nimport rrtimes from '../images/rolling-times.png'\nimport teapot from '../images/teapot.png'\nimport scottkim from '../images/scottkim.png'\n\nexport default function Projects() {\n  return (\n<div class='row margin-top-large'>\n  <div class='paper container border-dashed border-thick'>\n    <div class='text-center'>\n      <h1 class='margin-none'>Projects</h1>\n      <h3 class='margin-top-none'>Many of these really isn't super useful</h3>\n    </div>\n    <div class='row child-borders' style={{justifycontent: 'space-between'}}>\n      <Project\n        title='Rick Rolling News' \n        subtitle='Revitalization of an age-old meme' \n        detail='A fake website that where all subdirectories redirect to a Rick Roll. As an added bonus,\n                the embedded thumbnails when posted to social media pages have a fairly convincing news-look.'\n        linkAddress='http://www.therollingtimes.com/'\n        image={rrtimes}\n      />\n      {/* \n      <Project\n        title='Haskell Interpreter' \n        subtitle='Interpret haskell' \n        detail='and do stuff'\n        linkAddress='https://blockss.herokuapp.com/'\n        image={blockss}\n      />\n      */}\n      <Project\n        title='Blockss' \n        subtitle='Jenga but like, free spirited' \n        detail='My friend loves to create Jenga towers, and suggested that we make this Block Stacking Simulator for a hackathon! \n                The result of our two-day endeavor was a web toy with a simple but charming joy to it.'\n        linkAddress='https://blockss.herokuapp.com/'\n        image={blockss}\n      />\n      <Project\n        title='C++ Raytracer' \n        subtitle='Tracin&apos; rays through thick and thin' \n        detail='A raytracer I wrote back in Freshman year as a part of a course in data structures,\n                it doesn&apos;t really have many bells and whistles. Rather, it doesn&apos;t have any. \n                I&apos;m surprised that it worked at all, to be honest!'\n        linkAddress='https://github.com/scott0129/raytracer'\n        image={teapot}\n      />\n      <Project \n        title='Scott.Kim' \n        subtitle='This very website!' \n        detail='From humble beginnings of Times New Roman on a plain white background,\n                this website has come a long way! Taking bits of inspiration over the years,\n                much thanks goes out to PaperCSS for the format theming and VimAwesome for the color scheme.'\n        linkAddress='https://scott.kim'\n        image={scottkim}\n      />\n    </div>\n  </div>\n</div>\n  )\n}\n","import React from 'react';\nimport { ContentfulClient, ContentfulProvider } from 'react-contentful';\nimport Home from './pages/Home';\nimport Blog from './pages/Blog';\nimport Gallery from './pages/Gallery';\nimport Projects from './pages/Projects';\nimport './paper.min.css';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\n/*\nYes, this is generally bad practice\nBut all I got is a react frontend on Github Pages so what can I do really\nYou want to see my pictures from contentful? Fine! Go for it! hmph. >:(\n*/\nconst contentfulClient = new ContentfulClient({\n  accessToken: 'XM7gju7No_RswzOltli-n5gDcEU_rL6BjUUfXFC-94w',\n  space: 'enl9nk27knfy',\n});\n\nfunction App() {\n  return (\n<ContentfulProvider client={contentfulClient}>\n  <Router>\n    <nav class='split-nav'>\n        <div class='nav-brand'>\n            <h3><a href='/'>Scott.Kim</a></h3>\n        </div>\n        <div class='collapsible'>\n            <input id='collapsible1' type='checkbox' name='collapsible1'></input>\n            <button>\n                <label for='collapsible1'>\n                    <div class='bar1'></div>\n                    <div class='bar2'></div>\n                    <div class='bar3'></div>\n                </label>\n            </button>\n            <div class='collapsible-body'>\n                <ul class='inline'>\n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/projects'>Projects</Link></li>\n                    {/*\n                    <li><Link to='/photos'>Photos</Link></li>\n                    */}\n                    <li><Link to='/blog'>Blog</Link></li>\n                    <li><a href='https://github.com/scott0129'>GitHub</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n      <Switch>\n        <Route path='/projects'>\n          <Projects/>\n        </Route>\n        <Route path='/photos'>\n            <Gallery/>\n        </Route>\n        <Route path='/blog'>\n            <Blog/>\n        </Route>\n        <Route path='/'>\n            <Home/>\n        </Route>\n      </Switch>\n    </Router>\n</ContentfulProvider>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}